package parser.parselet;

import static compiler.C_OpCode.OP_GET_LOCAL;
import static compiler.C_OpCode.OP_SUPER_INVOKE;
import static scanner.TokenType.TOKEN_IDENTIFIER;
import static scanner.TokenType.TOKEN_LEFT_PAREN;

import compiler.C_Compiler;
import parser.Parser;

public class SuperParselet implements Parselet {
  
  public void parse(Parser parser, C_Compiler compiler, boolean canAssign) {
    
      
    
      

    

    parser.consume(TOKEN_IDENTIFIER, "Expect inherited method name.");

    
    int index = compiler.emitConstant(parser.previous().lexeme());

    

    compiler.emitCode(OP_GET_LOCAL);
    compiler.emitCode(0x00); 

    parser.consume(TOKEN_LEFT_PAREN, "Expect left parentheses after method name.");

    int argCount = compiler.argumentList();
    
    


    compiler.emitCode(OP_SUPER_INVOKE);
    compiler.emitCode(index); 
    compiler.emitCode(argCount);
  }
}
